version: "3.7"

services:
    # image project
    app:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        extra_hosts:
        - "host.docker.internal:host-gateway"
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - microsservice

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "8100:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - microsservice

    pgsql:
        image: 'postgres:13'
        ports:
            - '${FORWARD_DB_PORT:-5501}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
              - ".:/var/www/html"
        networks:
            - microsservice
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
            retries: 3
            timeout: 5s

    memcached:
        image: 'memcached:alpine'
        ports:
            - '11212:11211'
        networks:
            - microsservice


    # queue
    queue:
        build: 
            args: 
                user: ichaves
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes: 
            - ./:/var/www
        depends_on: 
            - redis
        networks: 
            - microsservice

    # redis
    redis:
        image: redis:latest
        networks:
            - microsservice

networks:
    microsservice:
        name: microsservice
        driver: bridge
